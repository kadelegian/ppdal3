<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Transaksi_transfer_model extends CI_Model
{

    public $table = 'transfer_kas';
    public $id = 'id';
    public $order = 'DESC';


    function __construct()
    {
        parent::__construct();
    }


    function get_all()
    {
        $this->db->order_by($this->id, $this->order);
        return $this->db->get($this->table)->result();
    }


    function get_by_id($id)
    {
        $this->db->select('transfer_kas.id,jurnal.keterangan,users.username,transfer_kas.nominal, transfer_kas.tanggal,
        MAX(CASE WHEN detail_transfer_kas.urutan = 1 THEN akun.id ELSE NULL END) as rekening_sumber, 
        MAX(CASE WHEN detail_transfer_kas.urutan = 2 THEN akun.id ELSE NULL END) as rekening_tujuan,
        MAX(CASE WHEN detail_transfer_kas.urutan = 1 THEN jurnal.id ELSE NULL END) as id_jurnal_sumber,
        MAX(CASE WHEN detail_transfer_kas.urutan = 2 THEN jurnal.id ELSE NULL END) as id_jurnal_tujuan
        ');
        $this->db->from('transfer_kas');
        $this->db->join('detail_transfer_kas', 'detail_transfer_kas.id_transfer=transfer_kas.id');
        $this->db->join('jurnal', 'jurnal.id=detail_transfer_kas.id_jurnal');
        $this->db->join('users', 'users.id=jurnal.id_user', 'left');
        $this->db->join('akun', 'akun.id=jurnal.id_akun', 'left');

        $this->db->group_by('transfer_kas.id');

        $this->db->where('transfer_kas.id', $id);
        return $this->db->get()->row();
    }

    // get total rows
    function total_rows($start_date = null, $end_date = null)
    {

        if (!$start_date || !$end_date) {
            $start_date = date('Y-m-01');
            $end_date = date('Y-m-t');
        }
        $this->db->select('transfer_kas.id');
        $this->db->from('transfer_kas');

        $this->db->where('date(transfer_kas.tanggal) >=', $start_date);
        $this->db->where('date(transfer_kas.tanggal) <=', $end_date);


        return $this->db->count_all_results();
    }


    function get_limit_data($limit, $start_date = null, $end_date = null, $start = 0)
    {

        if (!$start_date || !$end_date) {
            $start_date = date('Y-m-01');
            $end_date = date('Y-m-t');
        }
        $this->db->select('transfer_kas.id,jurnal.keterangan,users.username,transfer_kas.nominal, transfer_kas.tanggal,
        MAX(CASE WHEN detail_transfer_kas.urutan = 1 THEN akun.nama_akun ELSE NULL END) as rekening_sumber, 
        MAX(CASE WHEN detail_transfer_kas.urutan = 2 THEN akun.nama_akun ELSE NULL END) as rekening_tujuan');
        $this->db->from('transfer_kas');
        $this->db->join('detail_transfer_kas', 'detail_transfer_kas.id_transfer=transfer_kas.id');
        $this->db->join('jurnal', 'jurnal.id=detail_transfer_kas.id_jurnal');
        $this->db->join('users', 'users.id=jurnal.id_user', 'left');
        $this->db->join('akun', 'akun.id=jurnal.id_akun', 'left');

        $this->db->where('date(jurnal.tanggal) >=', $start_date);
        $this->db->where('date(jurnal.tanggal) <=', $end_date);
        $this->db->group_by('transfer_kas.id');
        $this->db->order_by($this->id, 'desc');
        $this->db->limit($limit, $start);
        return $this->db->get()->result();
    }


    function insert($data)
    {
        $this->db->trans_begin();
        $this->db->insert($this->table, $data);
        return $this->db->insert_id();
    }

    function insert_detail($data)
    {
        $c = $this->db->insert_batch('detail_transfer_kas', $data);
        $this->db->trans_complete();
        return $c;
    }
    // update data
    function update($id, $data)
    {
        $this->db->trans_begin();
        $this->db->where($this->id, $id);
        $this->db->update($this->table, $data);
    }
    function update_jurnal_transfer($data)
    {
        $this->db->update_batch('jurnal', $data, 'id');
        $this->db->trans_complete();
    }

    // delete data
    function delete($id)
    {
        $data_trx = $this->get_by_id($id);
        $this->db->trans_begin();
        //hapus di jurnal
        $this->db->where('id', $data_trx->id_jurnal_sumber);
        $this->db->delete('jurnal');
        $this->db->where('id', $data_trx->id_jurnal_tujuan);
        $this->db->delete('jurnal');
        //hapus detail
        $this->db->where('id_transfer', $id);
        $this->db->delete('detail_transfer_kas');
        //hapus transaksi

        $this->db->where($this->id, $id);
        $this->db->delete($this->table);
        $this->db->trans_complete();
    }
}

/* End of file Transaksi_iuran_model.php */
/* Location: ./application/models/Transaksi_iuran_model.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2023-12-05 07:15:59 */
/* http://harviacode.com */
